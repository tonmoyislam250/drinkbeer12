name: MegaSDKREST Release
on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test scenario tags'
        required: true
        type: boolean
jobs:
  BuildArtifacts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - linux/amd64
        include:
          - arch: linux/amd64
            dist: amd64
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Create Output Folder
        run: mkdir outputs
      - name: Build images and extract outputs
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.arch }}
          push: false
          outputs: type=tar,dest=outputs/dist-${{ matrix.dist }}.tar
          build-args: |
            CPU_ARCH=${{ matrix.dist }}
          tags: megasdkrest:latest

      - name: Extract built MegaSDKREST artifacts
        run: |
          cd outputs
          tar xf dist-${{ matrix.dist }}.tar
          rm -rf *.tar
          chmod a+x megasdkrest-${{ matrix.dist }}
          tar -czf megasdkrest-${{ matrix.dist }}.tar.gz megasdkrest-${{ matrix.dist }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: megasdkrest-${{ matrix.dist }}
          path: outputs/*

  Release:
    needs: BuildArtifacts
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/download-artifact@v2
        with:
          path: artifacts

      - run: |
          mkdir outputs
          cp artifacts/megasdkrest-amd64/* outputs/
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: MegaSDKREST Release
          files: |
            outputs/*
